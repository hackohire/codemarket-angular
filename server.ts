// generated by @ng-toolkit/serverless
import 'zone.js/dist/zone-node';
import 'reflect-metadata';
import {enableProdMode} from '@angular/core';
import {ngExpressEngine} from '@nguniversal/express-engine';
import {provideModuleMap} from '@nguniversal/module-map-ngfactory-loader';

import * as express from 'express';
import * as bodyParser from 'body-parser';
import * as cors from 'cors';
import * as compression from 'compression';

import {join} from 'path';

enableProdMode();

export const app = express();

app.use(compression());
app.use(cors());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

const DIST_FOLDER = join(process.cwd(), 'dist/browser');
const domino = require('domino');
var Element = domino.impl.Element;
import fs from 'fs';
const template = fs.readFileSync(join(DIST_FOLDER, 'index.html')).toString();
import { Blob } from "blob-polyfill";
import 'localstorage-polyfill';
const fetch = require('node-fetch');
const win = domino.createWindow(template);
global['window'] = win;
global['document'] = win.document;
global["branch"] = null;
global["object"] = win.object;
global["HTMLElement"] = win.HTMLElement;
global['Element'] = Element;
global["navigator"] = win.navigator;
global['Blob'] = Blob;
global['Event'] = null;
global['KeyboardEvent'] = null;
global['localStorage'] = localStorage;
global['fetch'] = fetch;

global["getComputedStyle"] = () => {
  return {
    getPropertyValue() {
      return "";
    }
  };
};

global['window']['LOG_LEVEL'] = 'DEBUG';

const {AppServerModuleNgFactory, LAZY_MODULE_MAP} = require('./dist/server/main');

app.engine('html', ngExpressEngine({
  bootstrap: AppServerModuleNgFactory,
  providers: [
    provideModuleMap(LAZY_MODULE_MAP)
  ]
}));

app.set('view engine', 'html');
app.set('views', join(DIST_FOLDER));

app.get('*.*', express.static(join(DIST_FOLDER), {
  maxAge: '1y'
}));

app.get('/*', (req, res) => {
  res.render('index', { req });
});
